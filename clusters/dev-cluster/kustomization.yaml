# Kustomization that installs HelmRepository resources (repositories used by HelmReleases)
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
metadata:
  name: helm-repos
  namespace: flux-system
spec:
  interval: 1m
  path: ./infrastructure/helm-repos
  prune: true
  sourceRef:
    kind: GitRepository
    name: gitops
---
# Install CNPG HelmRelease and wait for it to be ready (this will ensure CRDs are created)
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
metadata:
  name: cnpg-operator
  namespace: flux-system
spec:
  interval: 2m
  path: ./apps/base/cloudnativepg
  prune: true
  sourceRef:
    kind: GitRepository
    name: gitops
  wait: true
  dependsOn:
    - name: helm-repos
---
# Install kube-prometheus-stack and wait for it to be ready (CRDs: PodMonitor, PrometheusRule)
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
metadata:
  name: monitoring-operator
  namespace: flux-system
spec:
  interval: 2m
  path: ./apps/base/monitoring
  prune: true
  sourceRef:
    kind: GitRepository
    name: gitops
  wait: true
  dependsOn:
    - name: helm-repos
---
# Apply secrets (SOPS encrypted). Requires creating sops key secret in cluster.
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
metadata:
  name: repo-secrets
  namespace: flux-system
spec:
  interval: 2m
  path: ./secrets
  prune: true
  sourceRef:
    kind: GitRepository
    name: gitops
  decryption:
    provider: sops
    secretRef:
      name: sops-age-key
---
# Apply app CRs (Postgres Cluster, PodMonitor, PrometheusRule, hello-world) after operators + secrets are ready
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
metadata:
  name: apps
  namespace: flux-system
spec:
  interval: 5m
  path: ./apps/base
  prune: true
  sourceRef:
    kind: GitRepository
    name: gitops
  dependsOn:
    - name: cnpg-operator
    - name: monitoring-operator
    - name: repo-secrets
